let mapleader="\<Space>"
set background=dark
set vb
set encoding=utf-8
set ffs=unix,dos,mac
set fileformat=unix
set t_Co=256
set lazyredraw
set mousehide
set number
syntax on
colorscheme rb
color rb
set ruler
set cmdheight=1
set hid
set laststatus=2
:highlight ExtraWhitespace ctermbg=red guibg=red
:match ExtraWhitespace /\s\+$/
set clipboard=unnamedplus,unnamed,autoselect
set nocompatible
set history=200
set viminfo^=%
set backspace=eol,start,indent
set whichwrap+=<,>,h,l
set whichwrap=<,>,[,]
set scrolloff=1
set showcmd
set showmode
set showmatch
set mat=2
set nostartofline
set wildmode=list:full
set wildmenu
set autoread
set cursorline
set ignorecase
set expandtab
set shiftwidth=4
set smarttab
set softtabstop=4
set tabstop=4
set autoindent
set smartindent
set nobackup
set nowb
set noswapfile
filetype on
filetype plugin indent on

set incsearch
set hlsearch

au BufRead,BufNewFile *.twig setfiletype htmldjango
au BufRead,BufNewFile *.md set syntax=markdown

call pathogen#infect()
call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

au BufNewFile,BufReadPost *.py setl tabstop=8 shiftwidth=2 expandtab
au BufNewFile,BufReadPost *.scala setl tabstop=2 shiftwidth=2 expandtab

set statusline=[%n]\ %<%.99f\ %h%w%m%r%{exists('*CapsLockStatusline')?CapsLockStatusline():''}%y%=%-16(\ %l,%c-%v\ %)%P

set statusline=%f       "tail of the filename
set statusline+=[%{strlen(&fenc)?&fenc:'none'}, "file encoding
set statusline+=%{&ff}] "file format
set statusline+=%h      "help file flag
set statusline+=%m      "modified flag
set statusline+=%r      "read only flag
set statusline+=%y      "filetype
set statusline+=%=      "left/right separator
set statusline+=%c,     "cursor column
set statusline+=%l/%L   "cursor line/total lines
set statusline+=\ %P    "percent through file

let g:syntastic_always_populate_loc_list = 0
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_error_symbol='✗'
let g:syntastic_warning_symbol='⚠'

autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif

func! DeleteTrailingWS()
  exe "normal mz"
  %s/\s\+$//ge
  exe "normal `z"
endfunc
autocmd BufWrite *.py :call DeleteTrailingWS()

set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*cache*,.idea,target
let g:ctrlp_working_path_mode = 'ra'

hi IndentGuidesOdd  ctermbg=black
hi IndentGuidesEven ctermbg=darkgrey
let g:indent_guides_start_level = 1
let g:indent_guides_guide_size = 1

" tmux
let g:tmux_navigator_save_on_switch = 1

execute 'source ' . $HOME . '/.vim/shortkeys.vim'
